<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    
    
<!--     정적 리소스 파일들에는 보안 설정을 하지 않음        -->
	<security:http pattern="/include/**" security="none"/>     
           
	<security:http auto-config="true" use-expressions="true" create-session="never">
<!-- 		관리자 영역 설정 -->
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
<!-- 		권한에 관계없이 접속 가능한 영역(guest도 접속 가능) -->
		<security:intercept-url pattern="/user/**" access="permitAll" />
<!-- 		로그인한 사용자 영역 -->
		<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_TEST','ROLE_ADMIN','ROLE_GUEST')" />
		
<!-- 		로그인폼 -->
        <security:form-login login-page="/user/login.do"
               login-processing-url="/user/login_check.do"
               username-parameter="userid"
               password-parameter="passwd"
               authentication-success-handler-ref="successHandler"
               authentication-failure-handler-ref="failureHandler" />
		
<!-- 		세션 관리 -->
        <security:session-management>
            <security:concurrency-control error-if-maximum-exceeded="true" max-sessions="1" expired-url="/user/login.do"/>
        </security:session-management> 
		
		<!-- 		접근권한이 없는 경우 핸들러 bean -->
		<security:access-denied-handler ref="deniedHandler"/>
		
	</security:http>
	
	<beans:bean id="deniedHandler" class="com.example.security.service.DeniedHandler"/>
	<beans:bean id="successHandler" class="com.example.security.service.SuccessHandler"/>
	<beans:bean id="failureHandler" class="com.example.security.service.FailureHandler"/>
    
<!--    	로그인 인증 처리 빈 -->
    <beans:bean id="userService" class="com.example.security.service.UserService">
    	<beans:constructor-arg name="sqlSession" ref="sqlSession" />
    </beans:bean>
    
<!--     비밀번호 암호화 빈 -->
	<beans:bean id="pwdEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
</beans:beans>